{
  "info": {
    "name": "Internship Platform API",
    "description": "Complete API test collection for the Internship Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "student_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "staff_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "employer_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "position_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "shortlist_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login - Student",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"alice\",\n  \"password\": \"alicepass\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.expect(jsonData.user.role).to.equal('student');",
                  "    ",
                  "    // Store token for future requests",
                  "    pm.environment.set(\"token\", jsonData.access_token);",
                  "    pm.environment.set(\"student_id\", jsonData.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login - Staff",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"alice_in_wonderland\",\n  \"password\": \"alicepass\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has staff access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.equal('staff');",
                  "    ",
                  "    // Store staff token and ID",
                  "    pm.environment.set(\"token\", jsonData.access_token);",
                  "    pm.environment.set(\"staff_id\", jsonData.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login - Employer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"emily\",\n  \"password\": \"emilypass\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has employer access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.equal('employer');",
                  "    ",
                  "    // Store employer token and ID",
                  "    pm.environment.set(\"token\", jsonData.access_token);",
                  "    pm.environment.set(\"employer_id\", jsonData.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/identify",
              "host": ["{{baseUrl}}"],
              "path": ["api","identify"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('username');",
                  "    pm.expect(jsonData).to.have.property('role');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/all_users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has users array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{student_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{student_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.equal(pm.environment.get(\"student_id\"));",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Position Management",
      "item": [
        {
          "name": "Get All Positions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/internships",
              "host": ["{{baseUrl}}"],
              "path": ["api", "internships"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has positions array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    ",
                  "    // Store first position ID for later use",
                  "    if (jsonData.length > 0) {",
                  "        pm.environment.set(\"position_id\", jsonData[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create New Position (Employer)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"employer_id\": \"{{employer_id}}\",\n \"title\": \"Software Engineering Intern\",\n  \"description\": \"Join our team as a software engineering intern and work on cutting-edge projects.\",\n  \"requirements\": \"Python, Flask, SQL, Git\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/internships/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "internships", "create"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Position created successfully\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.equal(\"Software Engineering Intern\");",
                  "    pm.expect(jsonData.employer_id).to.equal(pm.collectionVariables.get(\"employer_id\"));",
                  "    ",
                  "    // Store the new position ID",
                  "    pm.collectionVariables.set(\"position_id\", jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Position by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/positions/{{position_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "positions", "{{position_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has position data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.equal(parseInt(pm.collectionVariables.get(\"position_id\")));",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Employer Positions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/positions/my-positions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "positions", "my-positions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has employer's positions\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Shortlist Management",
      "item": [
        {
          "name": "Add Student to Shortlist (Staff)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"student_id\": \"{{student_id}}\",\n  \"position_id\": \"{{position_id}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/shortlists",
              "host": ["{{baseUrl}}"],
              "path": ["api", "shortlists"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Shortlist created successfully\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.student_id).to.equal(parseInt(pm.collectionVariables.get(\"student_id\")));",
                  "    pm.expect(jsonData.position_id).to.equal(parseInt(pm.collectionVariables.get(\"position_id\")));",
                  "    pm.expect(jsonData.status).to.equal('pending');",
                  "    ",
                  "    // Store shortlist ID for later use",
                  "    pm.collectionVariables.set(\"shortlist_id\", jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Applications (Student)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/shortlists/my-applications",
              "host": ["{{baseUrl}}"],
              "path": ["api", "shortlists", "my-applications"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has student's applications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Position Applications (Employer)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/shortlists/position/{{position_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "shortlists", "position", "{{position_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has position applications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Application Status (Employer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"accepted\",\n  \"employer_response\": \"Congratulations! We are pleased to offer you the internship position.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/shortlists/{{shortlist_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "shortlists", "{{shortlist_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Application status updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.equal('accepted');",
                  "    pm.expect(jsonData.employer_response).to.include('Congratulations');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Login with Invalid Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"invalid\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Access Protected Route Without Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Student Trying to Create Position",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Unauthorized Position\",\n  \"description\": \"This should fail\",\n  \"requirements\": \"None\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/positions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "positions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 403\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "pm.test(\"Response has permission error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}